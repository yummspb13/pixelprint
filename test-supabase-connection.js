const { PrismaClient } = require('@prisma/client');

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–∞—à–∏ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
const prisma = new PrismaClient({
  datasources: {
    db: {
      url: "postgresql://postgres.nrtznccqxnfbvgarbqua:Rat606727931@aws-1-eu-west-2.pooler.supabase.com:6543/postgres?pgbouncer=true&sslmode=require"
    }
  }
});

async function testConnection() {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase PostgreSQL...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    await prisma.$connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ!');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ –∫–∞–∂–¥–æ–π —Ç–∞–±–ª–∏—Ü–µ
    const servicesCount = await prisma.service.count();
    console.log(`üì¶ Services: ${servicesCount} –∑–∞–ø–∏—Å–µ–π`);
    
    const priceRowsCount = await prisma.priceRow.count();
    console.log(`üí∞ PriceRows: ${priceRowsCount} –∑–∞–ø–∏—Å–µ–π`);
    
    const tiersCount = await prisma.tier.count();
    console.log(`üìä Tiers: ${tiersCount} –∑–∞–ø–∏—Å–µ–π`);
    
    const menuTilesCount = await prisma.menuTile.count();
    console.log(`üçΩÔ∏è MenuTiles: ${menuTilesCount} –∑–∞–ø–∏—Å–µ–π`);
    
    const whyArticlesCount = await prisma.whyArticle.count();
    console.log(`üìù WhyArticles: ${whyArticlesCount} –∑–∞–ø–∏—Å–µ–π`);
    
    const settingsCount = await prisma.settings.count();
    console.log(`‚öôÔ∏è Settings: ${settingsCount} –∑–∞–ø–∏—Å–µ–π`);
    
    console.log('üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    await prisma.$disconnect();
  }
}

testConnection();
